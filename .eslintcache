[{"C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\index.js":"1","C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\App.js":"2","C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\reportWebVitals.js":"3","C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\components\\Navbar.js":"4","C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\components\\Products.js":"5","C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\components\\AddProducts.js":"6"},{"size":480,"mtime":1645619425382,"results":"7","hashOfConfig":"8"},{"size":4097,"mtime":1665512330700,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1645619164806,"results":"10","hashOfConfig":"8"},{"size":846,"mtime":1665505949396,"results":"11","hashOfConfig":"8"},{"size":1614,"mtime":1665505967368,"results":"12","hashOfConfig":"8"},{"size":1734,"mtime":1665505891310,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1unwp0h",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\index.js",[],"C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\App.js",["27","28"],"import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport IERC from \"./contract/IERC.abi.json\";\r\nimport Thrift from \"./contract/Thrift.abi.json\";\r\nimport AddProducts from \"./components/AddProducts\";\r\nimport Products from \"./components/Products\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\n\r\nconst contractAddress = \"0x232400AA44aD26a5Db1fCe21697879297D683963\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\nfunction App() {\r\n\tconst [contract, setcontract] = useState(null);\r\n\tconst [address, setAddress] = useState(null);\r\n\tconst [kit, setKit] = useState(null);\r\n\tconst [cUSDBalance, setcUSDBalance] = useState(0);\r\n\tconst [products, setProducts] = useState([]);\r\n\r\n\tconst connectToWallet = async () => {\r\n\t\tif (window.celo) {\r\n\t\t\ttry {\r\n\t\t\t\tawait window.celo.enable();\r\n\t\t\t\tconst web3 = new Web3(window.celo);\r\n\t\t\t\tlet kit = newKitFromWeb3(web3);\r\n\r\n\t\t\t\tconst accounts = await kit.web3.eth.getAccounts();\r\n\t\t\t\tconst user_address = accounts[0];\r\n\r\n\t\t\t\tkit.defaultAccount = user_address;\r\n\r\n\t\t\t\tawait setAddress(user_address);\r\n\t\t\t\tawait setKit(kit);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Error Occurred\");\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconnectToWallet();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (kit && address) {\r\n\t\t\tgetBalance();\r\n\t\t}\r\n\t}, [kit, address]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (contract) {\r\n\t\t\tgetProducts();\r\n\t\t}\r\n\t}, [contract]);\r\n\r\n\tconst getBalance = async () => {\r\n\t\ttry {\r\n\t\t\tconst balance = await kit.getTotalBalance(address);\r\n\t\t\tconst USDBalance = balance.cUSD\r\n\t\t\t\t.shiftedBy(-ERC20_DECIMALS)\r\n\t\t\t\t.toFixed(2);\r\n\t\t\tconst contract = new kit.web3.eth.Contract(\r\n\t\t\t\tThrift,\r\n\t\t\t\tcontractAddress\r\n\t\t\t);\r\n\t\t\tsetcontract(contract);\r\n\t\t\tconsole.log(contract);\r\n\t\t\tsetcUSDBalance(USDBalance);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProducts = async () => {\r\n\t\tconsole.log(contract);\r\n\t\tconst thriftsLength = await contract.methods.getThriftsLength().call();\r\n\t\tconst _tit = [];\r\n\t\tfor (let index = 0; index < thriftsLength; index++) {\r\n\t\t\tlet _products = new Promise(async (resolve, reject) => {\r\n\t\t\t\tlet product = await contract.methods.getProduct(index).call();\r\n\r\n\t\t\t\tresolve({\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tcreator: product[0],\r\n\t\t\t\t\turl: product[1],\r\n\t\t\t\t\tlocation: product[2],\r\n\t\t\t\t\tserviceOption: product[3],\r\n\t\t\t\t\tphone: product[4],\r\n\t\t\t\t\tprice:product[5],\r\n\t\t\t\t\tsale:product[6]\r\n\t\t\t\t\t \r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t_tit.push(_products);\r\n\t\t}\r\n\t\tconst _products = await Promise.all(_tit);\r\n\t\tsetProducts(_products);\r\n\t\t \r\n\t};\r\n\t\r\n \r\n\t\r\n\r\n\tconst AddProduct = async (_url, _location, _serviceoption, _phone, price) => {\r\n\t\tconst _price = new BigNumber(price)\r\n\t\t\t.shiftedBy(ERC20_DECIMALS)\r\n\t\t\t.toString();\r\n\t\ttry {\r\n\t\t\tawait contract.methods\r\n\t\t\t\t.addProduct(_url, _location, _serviceoption, _phone, _price)\r\n\t\t\t\t.send({ from: address });\r\n\t\t\tgetProducts();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst UnlistProduct = async (_index) => {\r\n\t\ttry {\r\n\t\t\tawait contract.methods.unlistProduct(_index).send({ from: address });\r\n\t\t\tgetProducts();\r\n\t\t\tgetBalance();\r\n\t\t} catch (error) {\r\n\t\t\talert(error);\r\n\t\t}\r\n\t};\r\n\t \r\n \r\n\tconst buyProduct = async (_index) => {\r\n\t\ttry {\r\n\t\t\tconst cUSDContract = new kit.web3.eth.Contract(\r\n\t\t\t\tIERC,\r\n\t\t\t\tcUSDContractAddress\r\n\t\t\t);\r\n\r\n\t\t\tawait cUSDContract.methods\r\n\t\t\t\t.approve(contractAddress, products[_index].price)\r\n\t\t\t\t.send({ from: address });\r\n\t\t\tawait contract.methods.buyProduct(_index).send({ from: address });\r\n\t\t\tgetProducts();\r\n\t\t\tgetBalance();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<Navbar balance={cUSDBalance} />\r\n\r\n\t\t\t\t<Products\r\n\t\t\t\t\tproducts={products}\r\n\t\t\t\t\tbuyProduct={buyProduct}\r\n\t\t\t\t\tUnlistProduct={UnlistProduct}\r\n\t\t\t\t\tonlyOwner={address}\r\n\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t\t<AddProducts AddProduct={AddProduct} /> \r\n\t\t\t</div>\r\n\t\r\n\t\r\n);\r\n\t\r\n}\r\n\r\nexport default App;","C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\reportWebVitals.js",[],"C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\components\\Navbar.js",[],"C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\components\\Products.js",[],"C:\\Users\\OGOYI\\Desktop\\Thrift-Store\\src\\components\\AddProducts.js",[],{"ruleId":"29","severity":1,"message":"30","line":56,"column":5,"nodeType":"31","endLine":56,"endColumn":19,"suggestions":"32"},{"ruleId":"29","severity":1,"message":"33","line":62,"column":5,"nodeType":"31","endLine":62,"endColumn":15,"suggestions":"34"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.","ArrayExpression",["35"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["36"],{"desc":"37","fix":"38"},{"desc":"39","fix":"40"},"Update the dependencies array to be: [kit, address, getBalance]",{"range":"41","text":"42"},"Update the dependencies array to be: [contract, getProducts]",{"range":"43","text":"44"},[1536,1550],"[kit, address, getBalance]",[1623,1633],"[contract, getProducts]"]